#labels Featured,Phase-Design
==[http://code.google.com/apis/chart/ GoogleCharts] and the GChart Wrapper==

====Customizable charts can be generated using the [http://code.google.com/apis/chart/ Google Chart API]. The GChart Wrapper allows python access to the parameters of constructing the charts and displaying the URLs generated.====

===Constructing==
{{{
class GChart(UserDict)
    """Main chart class
    
    chart type must be valid for cht parameter
    dataset can be any python iterable
    kwargs will be put into chart params if valid"""
    def __init__(self, ctype, dataset, **kwargs):
}}}
*The chart takes any iterable python data type and does the encoding for you*
{{{
# Datasets 
dataset = (1, 2, 3)
# Also 2 dimensional
dataset = [[3,4], [5,6], [7,8]]
}}}
*Initialize the chart with a valid type (see API reference) and dataset*
{{{
# 3D Piechart
G = GChart('p3', dataset)

# Encoding (simple/text/extended)
G = GChart('p3', dataset, encoding='text')

# maxValue (for encoding values)
G = GChart('p3', dataset, maxValue=100)

# Size
G = GChart('p3', dataset, size=(300,150))

# OR directly pass in API parameters
G = GChart('p3', dataset, chtt='My Cool Chart', chl='A|B|C')
}}}

===Rendering===
*As the chart URL itself using __str__*
{{{
print str(G)
}}}

*As and HTML <img> tag, kw arguments can be valid tag attributes*
{{{
>>> print G.img(height=500,id="chart")
`<img alt="" title="" src="http://chart.apis.google.com/chart?..." id="chart" height="500" >`
}}}

===Viewing===
*Save chart to file as PNG image, returns filename*
{{{
>>> G.save('May')